{"version":3,"sources":["components/TodoItem/TodoItem.module.css","App.module.css","components/TodoForm/TodoForm.module.css","components/TodoItem/TodoItem.js","todoApi.js","store/actions/todos.js","components/TodoList/TodoList.js","components/TodoForm/TodoForm.js","App.js","store/reducers/todos.js","store/index.js","index.js"],"names":["module","exports","TodoItem","item","onItemToggle","onItemDelete","className","classes","onClick","id","aria-hidden","isDone","Done","title","e","stopPropagation","axios","create","baseURL","headers","actionTypeCreator","type","payload","createAction","deleteAction","statusAction","mapDispatchToProps","dispatch","todoApi","delete","getState","todo","todos","find","put","then","data","connect","map","key","createTodo","post","todoTemplate","useState","setTitle","TodoForm","onSubmit","preventDefault","placeholder","onChange","target","value","App","Wrapper","TodoWrapper","initialState","updateTodo","createStore","state","filter","applyMiddleware","thunk","logger","store","get","ReactDOM","render","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,KAAO,yB,mBCA/DD,EAAOC,QAAU,CAAC,QAAU,qBAAqB,YAAc,2B,mBCA/DD,EAAOC,QAAU,CAAC,SAAW,6B,uICmBdC,MAjBf,YAAwD,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aACrC,OACE,yBAAKC,UAAWC,IAAQL,UACtB,4BAAQM,QAAS,kBAAMJ,EAAaD,EAAKM,MACvC,uBAAGH,UAAU,cAAcI,cAAY,UAEzC,0BAAMJ,UAAWH,EAAKQ,OAASJ,IAAQK,KAAO,IAAKT,EAAKU,OACxD,4BAAQL,QAAS,SAACM,GAChBA,EAAEC,kBACFV,EAAaF,EAAKM,MAEhB,uBAAGH,UAAU,cAAcI,cAAY,Y,eCZlCM,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,mDACTC,QAAS,CAAC,eAAgB,sBCDtBC,EAAoB,SAAAC,GAAI,OAAI,SAAAC,GAAO,MAAK,CAACD,OAAKC,aAW9CC,EAAeH,EADa,sBAOxBI,EAAeJ,EADS,sBASxBK,EAAeL,EADS,sBCDlC,IAAMM,EAAqB,CACzBrB,aDNwB,SAAAI,GAAE,OAAI,SAAAkB,GAC5BA,EAASH,EAAaf,IAClBmB,EAAQC,OAAOpB,KCKrBL,aDCwB,SAAAK,GAAE,OAAI,SAACkB,EAAUG,GACvC,IAAMC,EAAI,eAAQD,IAAWE,MAAMC,MAAK,SAAA9B,GAAI,OAAIA,EAAKM,KAAOA,MAC5DsB,EAAKpB,QAAUoB,EAAKpB,OAChBiB,EAAQM,IAAIH,EAAKtB,GAAIsB,GAAMI,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAC5BT,EAASF,EAAaW,UCFnBC,eAXf,YACE,MAAO,CACHL,MAF4B,EAARA,SAWcN,EAAzBW,EA1Bf,YAA0D,IAAtCL,EAAqC,EAArCA,MAAO5B,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aACvC,OACI,6BACK2B,EAAMM,KAAI,SAACnC,GAAD,OACP,kBAAC,EAAD,CACIoC,IAAKpC,EAAKM,GACVN,KAAMA,EACNC,aAAcA,EACdC,aAAcA,W,yBCmBhC,IAAMqB,EAAqB,CAACc,WFjBF,SAAA3B,GAAK,OAAI,SAAAc,GAAQ,OACvCC,EAAQa,KAAK,GAZI,SAAA5B,GAAK,MAAK,CAACA,QAAMF,QAAQ,GAYzB+B,CAAa7B,IAAQsB,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAYT,EAASJ,EAAaa,UEkBlEC,cAAQ,KAAMX,EAAdW,EA7Bf,YAAiC,IAAdG,EAAa,EAAbA,WAAa,EACJG,mBAAS,IADL,mBACvB9B,EADuB,KAChB+B,EADgB,KAU9B,OACE,kBAAC,WAAD,KACE,0BAAMtC,UAAWC,IAAQsC,SAAUC,SAPvB,SAAChC,GACfA,EAAEiC,iBACAP,EAAW3B,GACX+B,EAAS,MAKL,2BACEvB,KAAK,OACL2B,YAAY,WACZC,SAbW,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OAAcN,EAASM,EAAOC,QAczCA,MAAOtC,IAET,gCACE,uBAAGP,UAAU,sB,iBCpBV,SAAS8C,IACpB,OACE,gCACE,yBAAK9C,UAAWC,IAAQ8C,SACtB,sCACA,2CAEF,yBAAK/C,UAAWC,IAAQ+C,aACtB,yCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,mBCRJC,EAAe,CACnBvB,MAAO,IAGHwB,EAAa,SAACxB,EAAOD,GAAR,OAAiBC,EAAMM,KAAI,SAACnC,GAAD,OAAWA,EAAKM,KAAOsB,EAAKtB,GAAKsB,EAAO5B,MAChFqC,EAAa,SAACR,EAAOD,GAAR,4BAAqBC,GAArB,CAA4BD,K,yBCPhC0B,eDSA,WAAoD,IAA1CC,EAAyC,uDAAjCH,EAAiC,yCAAjBlC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACrD,OAAQD,GACJ,IJT0B,mBIUtB,OAAO,eAAKqC,EAAZ,CAAmB1B,MAAOV,IAC9B,IJC4B,qBIAxB,OAAO,eACAoC,EADP,CAEI1B,MAAO0B,EAAM1B,MAAM2B,QAAO,SAACxD,GAAD,OAAUA,EAAKM,KAAOa,OAExD,IJI4B,qBIHxB,OAAO,eACAoC,EADP,CAEI1B,MAAOwB,EAAWE,EAAM1B,MAAOV,KAEvC,IJf4B,qBIgBxB,OAAO,eACAoC,EADP,CAEI1B,MAAOQ,EAAWkB,EAAM1B,MAAOV,KAEvC,QACI,OAAOoC,KC7BuBE,YAAgBC,IAAOC,MCI/DC,EAAMpC,UNAwB,SAAAA,GAAQ,OAClCC,EAAQoC,MAAM7B,MAAK,qBAAEC,KAAUT,EAFLP,EADE,2BMIhC6C,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACb,kBAACX,EAAD,OAEJe,SAASC,eAAe,W","file":"static/js/main.34ed6556.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoItem\":\"TodoItem_TodoItem__1fMtz\",\"Done\":\"TodoItem_Done__1y-Fu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"App_Wrapper__3u72b\",\"TodoWrapper\":\"App_TodoWrapper__1dDMT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoForm\":\"TodoForm_TodoForm__V59w2\"};","import React from 'react'\r\nimport classes from './TodoItem.module.css'\r\n\r\nfunction TodoItem({item, onItemToggle, onItemDelete }) {\r\n  return (\r\n    <div className={classes.TodoItem}>\r\n      <button onClick={() => onItemToggle(item.id)}>\r\n        <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n      </button>\r\n      <span className={item.isDone ? classes.Done : ''}>{item.title}</span>\r\n      <button onClick={(e) => {\r\n        e.stopPropagation();\r\n        onItemDelete(item.id)\r\n      }}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoItem\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://5dd3d5ba8b5e080014dc4bfa.mockapi.io/todos\",\r\n  headers: {'Content-Type': 'application/json'},\r\n})","import todoApi from '../../todoApi';\r\n\r\n// functions helper\r\nconst actionTypeCreator = type => payload => ({type,payload});\r\nconst todoTemplate = title => ({title,isDone: false});\r\n\r\n// action get todos\r\nexport const ACTION_SET_TODOS = 'ACTION_SET_TODOS';\r\n    const setAction = data => actionTypeCreator(ACTION_SET_TODOS, data);\r\nexport const getTodos = () => dispatch => \r\n    todoApi.get().then(({data}) => dispatch(setAction(data)));\r\n\r\n// action create new todo\r\nexport const ACTION_CREATE_TODO = 'ACTION_CREATE_TODO';\r\nconst createAction = actionTypeCreator(ACTION_CREATE_TODO);\r\nexport const createTodo = title => dispatch => \r\n    todoApi.post('', todoTemplate(title)).then(({data}) => dispatch(createAction(data)));\r\n\r\n// action delete todo\r\nexport const ACTION_DELETE_TODO = 'ACTION_DELETE_TODO';\r\n    const deleteAction = actionTypeCreator(ACTION_DELETE_TODO);\r\nexport const deleteTodo = id => dispatch => {\r\n    dispatch(deleteAction(id));\r\n        todoApi.delete(id);\r\n}\r\n\r\n// action status todo\r\nexport const ACTION_STATUS_TODO = 'ACTION_STATUS_TODO';\r\n    const statusAction = actionTypeCreator(ACTION_STATUS_TODO);\r\nexport const toggleTodo = id => (dispatch, getState) => {\r\n    const todo = { ...getState().todos.find(item => item.id === id) }\r\n    todo.isDone = !todo.isDone\r\n        todoApi.put(todo.id, todo).then(({data}) => \r\n            dispatch(statusAction(data)));\r\n}","import React from 'react'\r\nimport TodoItem from '../TodoItem/TodoItem';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodo, toggleTodo } from '../../store/actions/todos';\r\n\r\nfunction TodoList({ todos, onItemToggle, onItemDelete }) {\r\n  return (\r\n      <div>\r\n          {todos.map((item) => (\r\n              <TodoItem\r\n                  key={item.id}\r\n                  item={item}\r\n                  onItemToggle={onItemToggle}\r\n                  onItemDelete={onItemDelete}\r\n              />\r\n          ))}\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({todos}) {\r\n  return {\r\n      todos\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onItemDelete: deleteTodo,\r\n  onItemToggle: toggleTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createTodo } from '../../store/actions/todos';\r\nimport classes from './TodoForm.module.css';\r\n\r\nfunction TodoForm({createTodo}) {\r\n  const [title, setTitle] = useState('');\r\n\r\n  const inputHandler = ({target}) => setTitle(target.value);\r\n  \r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n      createTodo(title);\r\n      setTitle('');\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <form className={classes.TodoForm} onSubmit={addTodo}>\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"New Task\" \r\n            onChange={inputHandler} \r\n            value={title}\r\n          />\r\n          <button>\r\n            <i className=\"fas fa-plus\"></i>\r\n          </button>\r\n        </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {createTodo};\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoForm);\r\n","import React from 'react'\r\nimport TodoList from './components/TodoList/TodoList'\r\nimport TodoForm from './components/TodoForm/TodoForm'\r\nimport classes from './App.module.css'\r\n\r\nexport default function App() {\r\n    return (\r\n      <header>\r\n        <div className={classes.Wrapper}>\r\n          <h1>Hillel</h1>\r\n          <span>Todo-App</span>\r\n        </div>\r\n        <div className={classes.TodoWrapper}>\r\n          <h2>Todo List</h2>\r\n          <TodoForm />\r\n          <TodoList />\r\n        </div>\r\n      </header>\r\n    )\r\n}\r\n","import {\r\n  ACTION_SET_TODOS,\r\n  ACTION_DELETE_TODO,\r\n  ACTION_CREATE_TODO,\r\n  ACTION_STATUS_TODO,\r\n} from '../actions/todos';\r\n\r\nconst initialState = {\r\n  todos: [],\r\n};\r\n\r\nconst updateTodo = (todos, todo) => todos.map((item) => (item.id === todo.id ? todo : item));\r\nconst createTodo = (todos, todo) => [...todos, todo];\r\n\r\nexport default function (state = initialState, { type, payload }) {\r\n  switch (type) {\r\n      case ACTION_SET_TODOS:\r\n          return { ...state, todos: payload };\r\n      case ACTION_DELETE_TODO:\r\n          return {\r\n              ...state,\r\n              todos: state.todos.filter((item) => item.id !== payload),\r\n          };\r\n      case ACTION_STATUS_TODO:\r\n          return {\r\n              ...state,\r\n              todos: updateTodo(state.todos, payload),\r\n          };\r\n      case ACTION_CREATE_TODO:\r\n          return {\r\n              ...state,\r\n              todos: createTodo(state.todos, payload),\r\n          };\r\n      default:\r\n          return state;\r\n  }\r\n}","import {createStore, applyMiddleware} from 'redux';\r\nimport rootReducer from './reducers/todos';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk, logger));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\n\r\nimport store from './store';\r\nimport { getTodos } from './store/actions/todos';\r\n\r\nstore.dispatch(getTodos());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}